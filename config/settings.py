"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#c*%v9=os4@ji44z$#@95b8s4cs^$(irx=!@yv@)rp+7)e9yqn'

# SECURITY WARNING: don't run with debug turned on in production!
# 장고 프로젝트 오류 발생 시 상세 하게 알려주는것 DebugMode
# 운영시 반드시 False로 바꿔!!!! 개발에서만 해
DEBUG = True

# ACL이냐? ACL이네
ALLOWED_HOSTS = ["*"]


# Application definition
# 앱 admin startapp 하고나서 경로 설정해라 기본 경로는 django
# 인듯 거기서 부터 상대 경로로 지정 경로는.으로 구문
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'MTV.apps.MtvConfig',
    'common.apps.CommonConfig',
    'django.contrib.humanize',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases





# Test Flaf if you want Deployment, Change Value to False
is_Production = True
DataBase_Name = "django_db"
DataBase_Write_Endpoint = "test-db-cluster.cluster-clfyxk92vagu.ap-northeast-2.rds.amazonaws.com"
DataBase_Read_Endpoint = "test-db-cluster-readreplica.clfyxk92vagu.ap-northeast-2.rds.amazonaws.com"
DataBase_User = "root"
DataBase_User_Password = "tmdgur123"


# In Pord Case, Use RDS Aurora and read replica
if is_Production:
    DATABASE_ROUTERS = [
    'MTV.dbrouter.MultiDBRouter',
    ]
    DATABASES = {
        'default': {

            'ENGINE': 'django.db.backends.mysql',
            'NAME': DataBase_Name,
            'USER': DataBase_User,
            'PASSWORD': DataBase_User_Password,
            'HOST': DataBase_Write_Endpoint,
            'PORT': '3306',
            "OPTIONS": {"charset": "utf8mb4"}
        },
        'readonly': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': DataBase_Name,
            'USER': DataBase_User,
            'PASSWORD': DataBase_User_Password,
            'HOST': DataBase_Read_Endpoint,
            'PORT': '3306',
            "OPTIONS": {"charset": "utf8mb4"}
        }
    }
# In Test Case, Use sqllite
else:
        DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
import os
STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_REDIRECT_URL = '/MTV'
LOGOUT_REDIRECT_URL = '/MTV'